---
// import components
import TopHeader from "../components/header/TopHeader.astro";
import Header from "../components/header/Header.astro";
import Footer from "../components/footer/Footer.astro";
// import tailwind styles
import "../styles/global.css";
// import transitions
import { ClientRouter } from "astro:transitions";
// import vercel analytics
import Analytics from '@vercel/analytics/astro'
// import SEO utilities
import { useSEO } from "../i18n/utils";
// import Schema components
import OrganizationSchema from "../components/seo/OrganizationSchema.astro";
import BreadcrumbSchema from "../components/seo/BreadcrumbSchema.astro";

interface Props {
  title?: string;
  seoKey?: keyof typeof import("../i18n/ui").seo.it;
  customDescription?: string;
  customKeywords?: string;
  customOgImage?: string;
  customOgImageWidth?: string;
  customOgImageHeight?: string;
}

const currentLang = Astro.currentLocale || "it";
const getSEO = useSEO(currentLang);

// Get props with defaults
const { 
  title, 
  seoKey = "home", 
  customDescription,
  customKeywords,
  customOgImage,
  customOgImageWidth = "1200",
  customOgImageHeight = "630"
} = Astro.props;

// Generate SEO data
const seoTitle = title || getSEO(seoKey, "title");
const seoDescription = customDescription || getSEO(seoKey, "description");
const seoKeywords = customKeywords || getSEO(seoKey, "keywords");

// Generate Open Graph image data
const baseUrl = Astro.site?.toString().replace(/\/$/, '') || '';
const defaultOgImage = `${baseUrl}/images/logo.webp`;
const ogImageUrl = customOgImage ? `${baseUrl}${customOgImage}` : defaultOgImage;

// Generate Open Graph data and canonical URL
const currentUrl = new URL(Astro.url.pathname, Astro.site).toString();
const canonicalUrl = currentUrl.replace(/\/$/, '') || currentUrl; // Remove trailing slash except for root
const ogLocale = currentLang === "it" ? "it_IT" : "en_US";

// Generate hreflang URLs for multilingual support
const generateHreflangUrl = (lang: string, pathname: string) => {
  // Remove any language prefix from pathname
  const cleanPath = pathname.replace(/^\/(it|en)/, '') || '/';
  // Add the new language prefix
  const langPath = lang === 'it' ? `/it${cleanPath}` : `/en${cleanPath}`;
  return new URL(langPath, Astro.site).toString().replace(/\/$/, '') || new URL(langPath, Astro.site).toString();
};

const currentPath = Astro.url.pathname;
const itUrl = generateHreflangUrl('it', currentPath);
const enUrl = generateHreflangUrl('en', currentPath);
---

<!doctype html>
<html lang={currentLang}>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=5" />
    <meta name="robots" content="index, follow" />
    <meta name="google" content="notranslate" />
    <meta name="author" content="Next Code di Marco De Luca" />
    
    <!-- Dynamic SEO Meta Tags -->
    <title>{seoTitle}</title>
    <meta name="description" content={seoDescription} />
    <meta name="keywords" content={seoKeywords} />
    
    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalUrl} />
    
    <!-- Hreflang for multilingual support -->
    <link rel="alternate" hreflang="it" href={itUrl} />
    <link rel="alternate" hreflang="en" href={enUrl} />
    <link rel="alternate" hreflang="x-default" href={itUrl} />
    
    <!-- Open Graph Meta Tags -->
    <meta property="og:title" content={seoTitle} />
    <meta property="og:description" content={seoDescription} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalUrl} />
    <meta property="og:site_name" content="SBM - Your Health Partner" />
    <meta property="og:locale" content={ogLocale} />
    <meta property="og:image" content={ogImageUrl} />
    <meta property="og:image:width" content={customOgImageWidth} />
    <meta property="og:image:height" content={customOgImageHeight} />
    <meta property="og:image:alt" content={`${seoTitle} - SBM`} />
    
    <!-- Twitter Card Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={seoTitle} />
    <meta name="twitter:description" content={seoDescription} />
    <meta name="twitter:image" content={ogImageUrl} />
    <meta name="twitter:image:alt" content={`${seoTitle} - SBM`} />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    
    <!-- Schema Markup -->
    <OrganizationSchema />
    <BreadcrumbSchema currentLang={currentLang as 'it' | 'en'} />
    
    <ClientRouter />
  </head>
  <body class="m-0 w-full h-dvh font-Acumin">
    <div
      id="container"
      class="flex flex-col items-center border-0 min-h-screen overflow-x-hidden"
    >
      <TopHeader />
      <Header />
      <slot />
      <Footer />
    </div>
  </body>
   <Analytics />
  <script>
    import { gsap } from "gsap";
    console.log("using GSAP: ", gsap.version);
  </script>
</html>
