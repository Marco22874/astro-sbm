---
// Import 
import { Image } from 'astro:assets';
import Layout from '../../../layouts/Layout.astro';
import type { GetStaticPathsOptions, Page} from 'astro';
import type { CollectionEntry } from 'astro:content';

// Import helper functions and interface
import { getPaginatedNewsPaths, getPageData, type ProcessedNews } from '../../../utils/newsHelper.ts'; 

// Import languages
import { useTranslations } from "../../../i18n/utils.ts";

// Import components
import NewsArticle from '../../../components/utils/NewsArticle.astro';

// --- IMPOSTAZIONI SPECIFICHE PER QUESTA LINGUA ---
const CURRENT_LANG = 'en';
const tr = useTranslations(CURRENT_LANG); 
// --- Logica del Componente per Singola Pagina ---
const { page } = Astro.props as { page: Page<CollectionEntry<'news'>> };

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const CURRENT_LANG = 'en';
  const PAGE_SIZE = 2;
  return getPaginatedNewsPaths(CURRENT_LANG, PAGE_SIZE, paginate);
}

const { processedPageData, categoryMap, fetchError } = await getPageData(page, CURRENT_LANG);

const showNoNewsMessage = !fetchError && processedPageData.length === 0;
const layoutTitle = `SBM - ${tr("news.page")}`;

---

<Layout title={layoutTitle}>
  <div class="sbm-section w-screen flex flex-col mt-[160px] text-midnight">
    <div class="w-full mt-[15px] 2xl:border-b-8 2xl:max-w-[1063px] border-white bg-transparent">
      <h1 class="text-5xl uppercase text-midnight text-left md:px-8">{tr("news.page")}</h1>
    </div>

    {fetchError && (
      <div class="w-full text-center py-10 px-4 text-red-600 border border-red-300 bg-red-50 rounded-md mx-auto max-w-3xl">
        <p class="font-semibold">{tr("err.generic")}</p>
        <p>{tr("err.load-news")}</p>
      </div>
    )}

    {!fetchError && processedPageData.length > 0 && (
      <div class="w-full mt-[15px] 2xl:border-x-8 2xl:border-b-8 2xl:max-w-[1063px] border-white bg-transparent">
        <section id="vertical-news-list" class="bg-white text-midnight w-full flex flex-col gap-y-8 md:gap-y-12 p-0 md:p-8">
          {processedPageData.map((news) => (
            <NewsArticle news={news} currentLang={CURRENT_LANG} categoryMap={categoryMap} />
          ))}
        </section>
      </div>
    )}

    {showNoNewsMessage && (
      <div class="w-full text-center py-10 px-4">
        <p>{tr("err.no-news")} ({CURRENT_LANG}).</p>
      </div>
    )}

    {page.lastPage > 1 && (
      <nav aria-label={tr("paginate.label")} class="flex justify-center items-center flex-wrap gap-4 mt-12 mb-8 px-4">
        {page.url.prev ? (
          <a href={page.url.prev} class="px-4 py-2 border border-gray-300 rounded-md bg-white text-gray-700 hover:bg-gray-100 transition-colors text-sm font-medium">
            &laquo; {tr("paginate.prev")} 
          </a>
        ) : (
          <span class="px-4 py-2 border border-gray-200 rounded-md text-gray-400 cursor-not-allowed text-sm font-medium">&laquo; {tr("paginate.prev")}</span>
        )}

        <div class="flex items-center gap-2">
          {Array.from({ length: page.lastPage }, (_, i) => i + 1).map((num) => (
            <a
              href={`/${CURRENT_LANG}/news/${num}/`}
              class={`px-3 py-1 border rounded-md text-sm font-medium transition-colors ${
                num === page.currentPage
                  ? 'bg-sbm-purple text-white border-sbm-purple pointer-events-none'
                  : 'border-gray-300 bg-white text-gray-600 hover:bg-gray-100'
              }`}
              aria-current={num === page.currentPage ? 'page' : undefined}
            >
              {num}
            </a>
          ))}
        </div>

        {page.url.next ? (
          <a href={page.url.next} class="px-4 py-2 border border-gray-300 rounded-md bg-white text-gray-700 hover:bg-gray-100 transition-colors text-sm font-medium">
            {tr("paginate.next")} &raquo;
          </a>
        ) : (
          <span class="px-4 py-2 border border-gray-200 rounded-md text-gray-400 cursor-not-allowed text-sm font-medium">{tr("paginate.next")} &raquo;</span> 
        )}
      </nav>
    )}
  </div>
</Layout>