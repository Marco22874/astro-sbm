---
// Import 
import { Image } from 'astro:assets';
import Layout from '../../../layouts/Layout.astro';
import type { GetStaticPathsOptions, Page} from 'astro';
import type { CollectionEntry } from 'astro:content';

// Import helper functions and interface
import { getPaginatedNewsPaths, getPageData, type ProcessedNews } from '../../../utils/newsHelper.ts'; 

// Import languages
import { useTranslations } from "../../../i18n/utils.ts";

// --- IMPOSTAZIONI SPECIFICHE PER QUESTA LINGUA ---
const CURRENT_LANG = 'it';
const tr = useTranslations(CURRENT_LANG); 
// --- Logica del Componente per Singola Pagina ---
const { page } = Astro.props as { page: Page<CollectionEntry<'news'>> };

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const CURRENT_LANG = 'it';
  const PAGE_SIZE = 2;
  return getPaginatedNewsPaths(CURRENT_LANG, PAGE_SIZE, paginate);
}

const { processedPageData, categoryMap, fetchError } = await getPageData(page, CURRENT_LANG);

const showNoNewsMessage = !fetchError && processedPageData.length === 0;
const layoutTitle = `SBM - ${tr("news.page")}`;

---

<Layout title={layoutTitle}>
  <div class="sbm-section w-screen flex flex-col mt-[160px] text-midnight">
    <div class="w-full px-4 py-8 md:px-0"> 
      <h1 class="text-5xl text-midnight text-center md:text-left">{tr("news.page")}</h1>
    </div>

    {fetchError && (
      <div class="w-full text-center py-10 px-4 text-red-600 border border-red-300 bg-red-50 rounded-md mx-auto max-w-3xl">
        <p class="font-semibold">{tr("err.generic")}</p>
        <p>{tr("err.load-news")}</p>
      </div>
    )}

    {!fetchError && processedPageData.length > 0 && (
      <div class="w-full px-0"> 
        <section id="vertical-news-list" class="bg-white text-midnight w-full flex flex-col gap-y-8 md:gap-y-12 p-0 md:p-8">
          {processedPageData.map((news) => {
            const cleanSlug = news.slug.includes('/') ? news.slug.split('/').pop() : news.slug;
            const newsUrl = `/news/${CURRENT_LANG}/${cleanSlug ?? 'error-slug'}`;

            return (
              <article class="news h-auto w-full flex flex-col md:flex-row md:items-start md:gap-8 border-b border-gray-200 pb-8 md:pb-12 last:border-b-0 last:pb-0">
                <div class="md:flex-1 w-full md:w-auto">
                  <h2 class="text-2xl font-medium min-h-10 my-2 2xl:mt-10 md:text-3xl md:mb-5">
                    <a href={newsUrl} class="hover:text-sbm-purple transition-colors">{news.data.title}</a>
                  </h2>

                  <div class="w-full overflow-hidden">
                    <a href={newsUrl} class="w-full block group">
                      <Image
                        src={news.data.image}
                        alt={news.data.imageAlt ?? `Immagine per ${news.data.title}`}
                        width={600}
                        height={400}
                        format="webp"
                        quality={"mid"}
                        class="object-cover w-full h-full max-h-[400px] border-1 border-midnight/30 p-[2px] rounded-3xl inline-block group-hover:opacity-80 transition-opacity"
                        loading="lazy"
                      />
                    </a>
                  </div>

                  <p class="text-sm text-gray-600 mb-3 mt-4">
                    {tr("news.published")}: {news.data.pubDate.toLocaleDateString('it-IT', { year: 'numeric', month: 'long', day: 'numeric' })}
                  </p>

                  {news.data.categories && news.data.categories.length > 0 && (
                    <div class="flex flex-wrap gap-2 mb-5">
                      {news.data.categories.map((categoryRef: { id: string; collection: string }) => {
                        const categoryTitle = categoryMap.get(categoryRef.id);
                        return categoryTitle ? (
                          <div class="text-sbm-purple text-sm px-3 w-auto h-[30px] bg-sbm-purple/10 border border-sbm-purple rounded-3xl inline-flex items-center justify-center">
                            {categoryTitle}
                          </div>
                        ) : null;
                      })}
                    </div>
                  )}

                  <p class="min-h-32 md:text-lg xl:text-xl xl:leading-relaxed mt-4 mb-5 italic text-gray-600">
                    {news.data.description}
                  </p>
                </div>
              </article>
            );
          })}
        </section>
      </div>
    )}

    {showNoNewsMessage && (
      <div class="w-full text-center py-10 px-4">
        <p>{tr("err.no-news")} ({CURRENT_LANG}).</p>
      </div>
    )}

    {page.lastPage > 1 && (
      <nav aria-label={tr("paginate.label")} class="flex justify-center items-center flex-wrap gap-4 mt-12 mb-8 px-4">
        {page.url.prev ? (
          <a href={page.url.prev} class="px-4 py-2 border border-gray-300 rounded-md bg-white text-gray-700 hover:bg-gray-100 transition-colors text-sm font-medium">
            &laquo; {tr("paginate.prev")} 
          </a>
        ) : (
          <span class="px-4 py-2 border border-gray-200 rounded-md text-gray-400 cursor-not-allowed text-sm font-medium">&laquo; {tr("paginate.prev")}</span>
        )}

        <div class="flex items-center gap-2">
          {Array.from({ length: page.lastPage }, (_, i) => i + 1).map((num) => (
            <a
              href={`/${CURRENT_LANG}/news/${num}/`}
              class={`px-3 py-1 border rounded-md text-sm font-medium transition-colors ${
                num === page.currentPage
                  ? 'bg-sbm-purple text-white border-sbm-purple pointer-events-none'
                  : 'border-gray-300 bg-white text-gray-600 hover:bg-gray-100'
              }`}
              aria-current={num === page.currentPage ? 'page' : undefined}
            >
              {num}
            </a>
          ))}
        </div>

        {page.url.next ? (
          <a href={page.url.next} class="px-4 py-2 border border-gray-300 rounded-md bg-white text-gray-700 hover:bg-gray-100 transition-colors text-sm font-medium">
            {tr("paginate.next")} &raquo;
          </a>
        ) : (
          <span class="px-4 py-2 border border-gray-200 rounded-md text-gray-400 cursor-not-allowed text-sm font-medium">{tr("paginate.next")} &raquo;</span> 
        )}
      </nav>
    )}
  </div>
</Layout>