---
import { type CollectionEntry, getCollection, getEntry } from 'astro:content';
import { Image } from 'astro:assets';
import Layout from '../../layouts/Layout.astro';
import ArticleSchema from '../../components/seo/ArticleSchema.astro';
import { useTranslations } from '../../i18n/utils.ts';

// 1. Genera una pagina per ogni news nella collection
export async function getStaticPaths() {
  const newsEntries = await getCollection('news');
  const paths = newsEntries.map(entry => ({
    params: { slug: entry.slug }, 
    props: { entry },
  }));
  return paths;
}

interface Props {
  entry: CollectionEntry<'news'>;
}

const { entry } = Astro.props;
const { Content, headings, remarkPluginFrontmatter } = await entry.render();

const currentLang = entry.slug.startsWith('en/') ? 'en' : 'it';
const tr = useTranslations(currentLang);

// Carica tutte le news della stessa lingua per la navigazione
const allNews = await getCollection('news');
const sameLangNews = allNews
  .filter((newsEntry) => newsEntry.id.startsWith(currentLang + '/'))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Trova la posizione corrente e articoli adiacenti
const currentIndex = sameLangNews.findIndex(newsEntry => newsEntry.slug === entry.slug);
const prevNews = currentIndex > 0 ? sameLangNews[currentIndex - 1] : null;
const nextNews = currentIndex < sameLangNews.length - 1 ? sameLangNews[currentIndex + 1] : null;

let categoryMap = new Map<string, string>();
try {
    const categoryDataEntry = await getEntry('categories', currentLang);
    if (categoryDataEntry && Array.isArray(categoryDataEntry.data)) {
        categoryDataEntry.data.forEach(category => {
            if(category && category.slug && category.title){
                categoryMap.set(category.slug, category.title);
            }
        });
    }
} catch (e) {
    console.error(`Errore caricamento categorie per ${currentLang} nella pagina ${entry.slug}`, e);
}
---

<Layout title={entry.data.title}>
  <!-- Article Schema for SEO -->
  <ArticleSchema entry={entry} currentLang={currentLang} />
  <article class="sbm-section w-screen flex flex-col mt-[160px] text-midnight">
    <h1 class="text-3xl uppercase md:text-4xl font-bold text-midnight mb-2">{entry.data.title}</h1>
    <p class="text-md text-gray-600 mb-4">
      Pubblicato il: {entry.data.pubDate.toLocaleDateString(currentLang === 'en' ? 'en-GB' : 'it-IT', { year: 'numeric', month: 'long', day: 'numeric' })}
    </p>

    {entry.data.categories && entry.data.categories.length > 0 && (
      <div class="sbm-section flex flex-wrap gap-2 mb-6">
        {entry.data.categories.map(categoryRef => {
          const categoryTitle = categoryMap.get(categoryRef.id);
          return categoryTitle ? (
            <span class="text-sbm-purple text-sm px-3 py-1 bg-sbm-purple/10 border border-sbm-purple rounded-full">
              {categoryTitle}
            </span>
          ) : null;
        })}
      </div>
    )}
    {entry.data.image && (
      <div class="mb-8">
        <Image
          src={entry.data.image}
          alt={entry.data.imageAlt}
          width={800} 
          format="webp"
          quality="mid"
          class="w-full h-auto rounded-lg shadow-md"
          loading="eager"
        />
      </div>
    )}
    <div class="prose prose-lg max-w-[800px] prose-img:rounded-lg mb-8 md:text-xl xl:text-2xl xl:leading-9"> 
      <Content /> 
    </div>

    <!-- Navigazione tra articoli -->
    {(prevNews || nextNews) && (
      <nav class="w-full flex justify-between items-center mt-12 pt-6 mb-12 border-t border-gray-200">
        {prevNews ? (
          <a 
            href={`/news/${prevNews.slug}/`} 
            class="px-4 py-2 border border-gray-300 rounded-md bg-white text-gray-700 hover:bg-gray-100 transition-colors text-sm font-medium"
          >
            &laquo; {currentLang === 'it' ? 'Articolo precedente' : 'Previous article'}
          </a>
        ) : (
          <span class="px-4 py-2 border border-gray-200 rounded-md text-gray-400 cursor-not-allowed text-sm font-medium">&laquo; {currentLang === 'it' ? 'Articolo precedente' : 'Previous article'}</span>
        )}

        {nextNews ? (
          <a 
            href={`/news/${nextNews.slug}/`} 
            class="px-4 py-2 border border-gray-300 rounded-md bg-white text-gray-700 hover:bg-gray-100 transition-colors text-sm font-medium"
          >
            {currentLang === 'it' ? 'Articolo successivo' : 'Next article'} &raquo;
          </a>
        ) : (
          <span class="px-4 py-2 border border-gray-200 rounded-md text-gray-400 cursor-not-allowed text-sm font-medium">{currentLang === 'it' ? 'Articolo successivo' : 'Next article'} &raquo;</span>
        )}
      </nav>
    )}
  </article>
</Layout>