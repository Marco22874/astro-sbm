---
// import languages
import { useTranslations } from "../../../i18n/utils";
// import components
const currentLang = Astro.currentLocale;
const tr = useTranslations(currentLang);

const initialHtml = tr("intro.text").replace(/\n/g, '<br>');
---

<section id="intro" class="sbm-section w-screen flex-1 my-[40px]">
  <p id="animated-paragraph" class="text-midnight my-3 lg:my-5 2xl:my-20 text-2xl lg:text-3xl 2xl:text-5xl xl:leading-15"
    set:html={initialHtml}
  />
</section>


<script>

  function splitTextAndApplyClasses(element: HTMLElement) {
      const originalHTML = element.innerHTML;
      const lines = originalHTML.split(/<br\s*\/?>/gi);
      const fragment = document.createDocumentFragment();
      let globalLetterIndex = 0; 

      lines.forEach((line, lineIndex) => {
        const words = line.trim().split(/(\s+)/);

        words.forEach(wordOrSpace => {
          if (wordOrSpace.trim().length === 0) {
            if (wordOrSpace.length > 0) { 
              fragment.appendChild(document.createTextNode(wordOrSpace));
            }
          } else {
            const wordWrapper = document.createElement('span');
            wordWrapper.className = 'word-wrapper'; 

            for (let i = 0; i < wordOrSpace.length; i++) {
              const char = wordOrSpace[i];
              const span = document.createElement('span');
              span.classList.add(
                'letter', 'opacity-0', 'translate-y-5', 'transform',
                'transition-all', 'duration-500', 'ease-out'
              );
              span.style.transitionDelay = `${globalLetterIndex * 45}ms`;
              span.textContent = char;
              wordWrapper.appendChild(span);
              globalLetterIndex++;
            }
            fragment.appendChild(wordWrapper);
          }
        });

        if (lineIndex < lines.length - 1) {
          fragment.appendChild(document.createElement('br'));
        }
      });

      element.innerHTML = '';
      element.appendChild(fragment);
  }

  function setupIntroAnimation() {
      const paragraph = document.getElementById("animated-paragraph") as HTMLElement | null;
      if (!paragraph) return;

      if (!paragraph.querySelector('.word-wrapper')) {
        splitTextAndApplyClasses(paragraph);
      } else {
          const letters = paragraph.querySelectorAll('.letter');
          letters.forEach((letter: Element) => {
              letter.classList.remove('opacity-100', 'translate-y-0');
              letter.classList.add('opacity-0', 'translate-y-5');
          });
      }

      const lettersToAnimate = paragraph.querySelectorAll('.letter');
      if (lettersToAnimate.length === 0) return;

      const observer = new IntersectionObserver((entries, observerInstance) => {
          entries.forEach(entry => {
              if (entry.isIntersecting) {
                lettersToAnimate.forEach((letter: Element) => {
                  letter.classList.remove('opacity-0', 'translate-y-5');
                  letter.classList.add('opacity-100', 'translate-y-0');
                });
                observerInstance.unobserve(paragraph);
              }
            });
      }, { root: null, threshold: 0.1 });
      observer.observe(paragraph);
  }

document.addEventListener('astro:page-load', setupIntroAnimation);
document.addEventListener('astro:after-swap', setupIntroAnimation);

</script>
</script>