---
// src/components/GoogleMap.astro
export interface Props {
  apiKey: string | undefined;
}

const { apiKey } = Astro.props;
const apiKeyMissing = !apiKey;

if (apiKeyMissing) {
  console.error("[GoogleMap Component] Errore: La prop 'apiKey' è mancante o non definita. Impossibile caricare la mappa.");
}
---

{ !apiKeyMissing ? (
  <>
    <script define:vars={{ apiKey }} is:inline>
      if (!window.googleMapsApiLoaded) {
        window.googleMapsApiLoaded = true;
        (g => {
          var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window;
          b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams,
          u = () => h || (h = new Promise(async (f, n) => {
            await (a = m.createElement("script"));
            e.set("libraries", [...r] + "");
            for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]);
            e.set("callback", c + ".maps." + q);
            a.src = `https://maps.${c}apis.com/maps/api/js?` + e;
            d[q] = f;
            a.onerror = () => (h = n(Error(p + " could not load.")));
            a.nonce = m.querySelector("script[nonce]")?.nonce || "";
            m.head.append(a);
          }));
          d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n))
        })
        ({ key: apiKey, v: "weekly", libraries: "maps,marker" });
      }
    </script>

    <div id="map" style="height: 100%; width: 100%;"></div>

    <script>
      import { initMap } from '../../../scripts/gmaps.js';
            declare global {
        interface Window {
          google: any; 
          googleMapsApiLoaded?: boolean;
        }
      }

      let isMapInitializingOrInitialized = false;

      function isGoogleMapsReady(): boolean {
        const ready = typeof window.google !== 'undefined' &&
               typeof window.google.maps !== 'undefined' &&
               typeof window.google.maps.importLibrary === 'function';
         return ready;
      }

      function tryInitMap() {
        if (isMapInitializingOrInitialized) {
          return;
        }

        const mapElement = document.getElementById('map');
        if (!mapElement) {
           return;
        }

        if (isGoogleMapsReady()) {
          isMapInitializingOrInitialized = true;
          initMap().catch(error => {
             console.error("[GoogleMap Init] Errore catturato durante initMap:", error);
             isMapInitializingOrInitialized = false;
          });
        } else {
          console.warn('[GoogleMap Init] API non ancora pronta quando tryInitMap è stato chiamato.');
        }
      }

      document.addEventListener('astro:page-load', () => {
        isMapInitializingOrInitialized = false;
        setTimeout(tryInitMap, 100);
      });

      if (document.readyState === 'complete' || document.readyState === 'interactive') {
        setTimeout(tryInitMap, 100);
      } else {
        document.addEventListener('DOMContentLoaded', () => {
           setTimeout(tryInitMap, 100);
        });
      }
    </script>
  </>
) : (
  <div class="map-error-placeholder" style="height: 400px; width: 100%; border: 1px dashed red; display: flex; align-items: center; justify-content: center; text-align: center; padding: 1rem;">
    Errore: Chiave API Google Maps mancante.<br/> Impossibile caricare la mappa.
  </div>
)}