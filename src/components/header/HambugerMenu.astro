---
import SecondaryMenu from "../utils/SecondaryMenu.astro";
---

<!-- Sbm Hamburger Menu -->
<div id="sbm-menu" class="lg:hidden flex justify-center z-100">
  <button
    class="group w-[60px] h-[60px]"
    aria-pressed="false"
    onclick="this.setAttribute('aria-pressed', !(this.getAttribute('aria-pressed') === 'true'))"
  >
    <div class="justify-items-center gap-2.5 grid">
      <span
        class="bg-(--color-midnight) group-hover:shadow-[0_0_5px_var(--color-midnight)] group-hover:brightness-[1.5] rounded-full w-[30px] group-[[aria-pressed=true]]:w-[42px] h-[2px] group-[[aria-pressed=true]]:rotate-45 transition-all group-[[aria-pressed=true]]:translate-y-[12px] duration-600"
      >
      </span>
      <span
        class="bg-(--color-midnight) group-hover:shadow-[0_0_5px_var(--color-midnight)] group-hover:brightness-[1.5] rounded-full w-[30px] h-[2px] group-[[aria-pressed=true]]:scale-x-0 transition-all duration-300"
      >
      </span>
      <span
        class="bg-(--color-midnight) group-hover:shadow-[0_0_5px_var(--color-midnight)] group-hover:brightness-[1.5] rounded-full w-[30px] group-[[aria-pressed=true]]:w-[42px] h-[2px] group-[[aria-pressed=true]]:-rotate-45 transition-all group-[[aria-pressed=true]]:-translate-y-[12px] duration-600"
      >
      </span>
    </div>
  </button>
</div>
<!-- End Sbm Hamburger Menu -->

<!-- Overlay Panel -->
<div
  id="sbm-panel"
  class="hidden fixed top-0 left-0 w-full h-full bg-midnight bg-opacity-20 z-10"
>
  <SecondaryMenu />
</div>

<script>
  import { gsap } from "gsap";

  document.addEventListener("DOMContentLoaded", () => {
    const sbmMenu = document.getElementById("sbm-menu") as HTMLElement | null;
    const sbmPanel = document.getElementById("sbm-panel") as HTMLElement | null;

    if (sbmMenu && sbmPanel) {
      sbmMenu.addEventListener("click", () => {
        const isOpen = !sbmPanel.classList.contains("hidden");

        if (isOpen) {
          // Animazione per chiudere il pannello
          gsap.to(sbmPanel, {
            opacity: 0,
            scale: 0.8, // Effetto di scalatura
            duration: 0.5,
            onComplete: () => {
              sbmPanel.classList.add("hidden"); // Nascondi dopo l'animazione
            },
          });
        } else {
          // Animazione per aprire il pannello
          sbmPanel.classList.remove("hidden");
          gsap.fromTo(
            sbmPanel,
            { opacity: 0, scale: 0.8 }, // Inizia con opacità 0 e scala 0.8
            { opacity: 1, scale: 1, duration: 0.5 } // Arriva a opacità 1 e scala 1
          );
        }
      });
    }
  });
</script>
